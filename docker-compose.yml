version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - DEBUG=true
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - TRIGGER_SECRET_KEY=${TRIGGER_SECRET_KEY}
      - TRIGGER_PROJECT_ID=${TRIGGER_PROJECT_ID}
      - MODAL_TOKEN_ID=${MODAL_TOKEN_ID}
      - MODAL_TOKEN_SECRET=${MODAL_TOKEN_SECRET}
      - MODAL_WEBHOOK_URL=${MODAL_WEBHOOK_URL}
      - APP_URL=${APP_URL:-http://localhost:8000}
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=524288000
      - DATABASE_URL=sqlite:///./transcriptions.db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - app_data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - echo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - echo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  trigger-dev:
    image: node:18-slim
    working_dir: /app
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    environment:
      - TRIGGER_SECRET_KEY=${TRIGGER_SECRET_KEY}
      - TRIGGER_PROJECT_ID=${TRIGGER_PROJECT_ID}
    command: sh -c "npm install && npx trigger.dev@latest dev"
    networks:
      - echo_network
    profiles:
      - dev
    restart: "no"

volumes:
  redis_data:
    driver: local
  app_data:
    driver: local
  node_modules:
    driver: local

networks:
  echo_network:
    driver: bridge